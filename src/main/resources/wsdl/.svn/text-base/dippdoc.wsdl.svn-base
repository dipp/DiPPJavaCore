<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<wsdl:definitions xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" 
	xmlns:tns="http://www.dippCore.dipp.nrw.de/definitions/"
	xmlns:ns0="http://webservice.dippCore.dipp.nrw.de" 
	xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" 
	xmlns:xsd="http://www.w3.org/2001/XMLSchema" 
	name="ContentModelService" 
	targetNamespace="http://www.dippCore.dipp.nrw.de/definitions/">
  <wsdl:types>
    <xsd:schema targetNamespace="http://webservice.dippCore.dipp.nrw.de">
      <xsd:element name="getArticleContentMetadata">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element name="in0" type="xsd:string" />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="getArticleContentMetadataResponse">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element name="ExtendedMetadata" type="ns0:ExtendedMetadata"
            	maxOccurs="1" minOccurs="1" />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="getQualifiedDublinCore">
      	<xsd:complexType>
      		<xsd:sequence>
      			<xsd:element name="in0" type="xsd:string"></xsd:element>
      		</xsd:sequence>
      	</xsd:complexType>
      </xsd:element>
      <xsd:element name="getQualifiedDublinCoreResponse">
      	<xsd:complexType>
      		<xsd:sequence>
      			<xsd:element name="QualifiedDublinCore"
      				type="ns0:QualifiedDublinCore" maxOccurs="1" minOccurs="1">
      			</xsd:element>
      		</xsd:sequence>
      	</xsd:complexType>
      </xsd:element>
      <xsd:element name="setQualifiedDublinCore">
      	<xsd:complexType>
      		<xsd:sequence>
      			<xsd:element name="in0" type="xsd:string"></xsd:element>
      			<xsd:element name="in1" type="ns0:QualifiedDublinCore"></xsd:element>
      		</xsd:sequence>
      	</xsd:complexType>
      </xsd:element>
    
            <xsd:element name="setNewJournal">
            	<xsd:complexType>
            		<xsd:sequence>
            			<xsd:element name="in0"
            				type="ns0:QualifiedDublinCore">
            			</xsd:element>
            			<xsd:element name="zopeInstance"
            				type="xsd:string" maxOccurs="1" minOccurs="0">
            			</xsd:element>
            			<xsd:element name="oaiSetName" type="xsd:string" maxOccurs="1" minOccurs="0">
            			</xsd:element>
            			<xsd:element name="oaiSetSpec"
            				type="xsd:string" maxOccurs="1" minOccurs="0">
            			</xsd:element>
            		</xsd:sequence>
            	</xsd:complexType>
            </xsd:element>
            <xsd:element name="setNewJournalResponse">
            	<xsd:complexType>
            		<xsd:sequence>
            			<xsd:element name="setNewJournalReturn" type="xsd:string"></xsd:element>
            		</xsd:sequence>
            	</xsd:complexType>
            </xsd:element>
            <xsd:element name="setNewArticle">
            	<xsd:complexType>
            		<xsd:sequence>
            			<xsd:element name="in0" type="xsd:string"
            				maxOccurs="unbounded" minOccurs="0">
                            <xsd:annotation>
                            	<xsd:documentation>
                            		An Array of String that takes all
                            		Container PIDs, the new Article is
                            		child of. Not Required. It is needed
                            		if an Article should be Part of a
                            		Volume or Special Issue
                            	</xsd:documentation>
                            </xsd:annotation>
            			</xsd:element>
            			<xsd:element name="in1" type="xsd:string">
                            <xsd:annotation>
                            	<xsd:documentation>
                            		The PID of the eJournal the Article
                            		is assigned to. Required
                            	</xsd:documentation>
                            </xsd:annotation>
            			</xsd:element>
            			<xsd:element name="in2"
            				type="ns0:QualifiedDublinCore">
                            <xsd:annotation>
                            	<xsd:documentation>
                            		The Qualified Dublin Core Metadata
                            		of the new Article. Required but not
                            		all child elements are nessecary.
                            	</xsd:documentation>
                            </xsd:annotation>
            			</xsd:element>
            			<xsd:element name="nativeDocIdent"
            				type="xsd:string">
                            <xsd:annotation>
                            	<xsd:documentation>
                            		A String that is a URL
                            	</xsd:documentation>
                            </xsd:annotation>
            			</xsd:element>
            			<xsd:element name="storageType"
            				type="xsd:string">
                            <xsd:annotation>
                            	<xsd:documentation>
                            		String that defines the type of
                            		Conversion: if its for testing only
                            		or if ts for producing. It can be
                            		either the term permanent or the
                            		term temporary. Required?
                            	</xsd:documentation>
                            </xsd:annotation>
            			</xsd:element>
            			<xsd:element name="targetFormat"
            				type="xsd:string" minOccurs="0" maxOccurs="unbounded">
                            <xsd:annotation>
                            	<xsd:documentation>
                            		An Array of Strings that contains
                            		all Formats to which the uploaded
                            		Article (rtf) should be converted.
                            		Could be either term html or term
                            		pdf. Required?
                            	</xsd:documentation>
                            </xsd:annotation>
            			</xsd:element>
            		</xsd:sequence>
            	</xsd:complexType>
            </xsd:element>
            <xsd:element name="setNewArticleResponse">
            	<xsd:complexType>
            		<xsd:sequence>
            			<xsd:element name="setNewArticleReturn" type="xsd:string"></xsd:element>
            		</xsd:sequence>
            	</xsd:complexType>
            </xsd:element>
            <xsd:element name="setConvert">
            	<xsd:complexType>
            		<xsd:sequence>
            			<xsd:element name="articlePID"
            				type="xsd:string">
            			</xsd:element>
            			<xsd:element name="sourceURL"
            				type="xsd:string">
            			</xsd:element>
            			<xsd:element name="targetFormat"
            				type="xsd:string" minOccurs="0" maxOccurs="unbounded">
            			</xsd:element>
            		</xsd:sequence>
            	</xsd:complexType>
            </xsd:element>
            <xsd:element name="setConvertResponse">
            	<xsd:complexType>
            		<xsd:sequence>
            			<xsd:element name="setConvertReturn" type="xsd:string"></xsd:element>
            		</xsd:sequence>
            	</xsd:complexType>
            </xsd:element>
            <xsd:element name="setNewContainer">
            	<xsd:complexType>
            		<xsd:sequence>
            			<xsd:element name="in0" type="xsd:string"></xsd:element>
            			<xsd:element name="in1" type="xsd:string">
            			</xsd:element>
            			<xsd:element name="in2"
            				type="xsd:string">
            			</xsd:element>
            		</xsd:sequence>
            	</xsd:complexType>
            </xsd:element>
            <xsd:element name="setNewContainerResponse">
            	<xsd:complexType>
            		<xsd:sequence>
            			<xsd:element name="setNewContainerReturn" type="xsd:string"></xsd:element>
            		</xsd:sequence>
            	</xsd:complexType>
            </xsd:element>
    
            <xsd:complexType name="ExtendedMetadata">
            	<xsd:sequence>
            		<xsd:element name="objectHTML" type="xsd:string"
            			nillable="true">
            		</xsd:element>
            		<xsd:element name="objectMultimedia"
            			type="xsd:string" nillable="true">
            		</xsd:element>
            		<xsd:element name="objectNative" type="xsd:string"
            			nillable="true">
            		</xsd:element>
            		<xsd:element name="objectOther" type="xsd:string"
            			nillable="true">
            		</xsd:element>
            		<xsd:element name="objectPDF" type="xsd:string"
            			nillable="true">
            		</xsd:element>
            		<xsd:element name="objectXML" type="xsd:string"
            			nillable="true">
            		</xsd:element>
            		<xsd:element name="objectSupplementary" type="xsd:string" 
            			nillable="true"></xsd:element>
            	</xsd:sequence>
            </xsd:complexType>
            
            <xsd:complexType name="QualifiedDublinCore">
            	<xsd:sequence>
            		<xsd:element name="DCTermsAbstract"
            			type="ns0:Element" minOccurs="0" maxOccurs="unbounded">
            		</xsd:element>
            		<xsd:element name="DDC" type="xsd:string"
            			maxOccurs="unbounded" minOccurs="0">
            		</xsd:element>
            		<xsd:element name="accessRights" type="xsd:string"
            			maxOccurs="unbounded" minOccurs="0">
            		</xsd:element>
            		<xsd:element name="alternative" type="ns0:Element"
            			maxOccurs="unbounded" minOccurs="0">
            		</xsd:element>
            		<xsd:element name="articleType" type="xsd:string"
            			minOccurs="0" maxOccurs="unbounded">
            		</xsd:element>
            		<xsd:element name="audience" type="xsd:string"
            			maxOccurs="unbounded" minOccurs="0">
            		</xsd:element>
            		<xsd:element name="available" type="xsd:dateTime"
            			nillable="true">
            		</xsd:element>
            		<xsd:element name="bibliographicCitation"
            			type="ns0:Citation" maxOccurs="unbounded"
            			minOccurs="0">
            		</xsd:element>
            		<xsd:element name="conformsTo" type="xsd:string"
            			minOccurs="0" maxOccurs="unbounded">
            		</xsd:element>
            		<xsd:element name="contributor"
            			type="ns0:Contributor" maxOccurs="unbounded"
            			minOccurs="0">
            		</xsd:element>
            		<xsd:element name="coverage" type="xsd:string"
            			maxOccurs="unbounded" minOccurs="0">
            		</xsd:element>
            		<xsd:element name="created" type="xsd:dateTime"
            			nillable="true">
            		</xsd:element>
            		<xsd:element name="creatorCorporated"
            			type="ns0:CreatorCorporated" maxOccurs="unbounded"
            			minOccurs="0">
            		</xsd:element>
            		<xsd:element name="creatorPerson"
            			type="ns0:CreatorPerson" maxOccurs="unbounded"
            			minOccurs="0">
            		</xsd:element>
            		<xsd:element name="date" type="xsd:string"
            			minOccurs="0" maxOccurs="unbounded">
            		</xsd:element>
            		<xsd:element name="dateAccepted" type="xsd:dateTime"
            			nillable="true">
            		</xsd:element>
            		<xsd:element name="dateCopyrighted"
            			type="xsd:dateTime" nillable="true">
            		</xsd:element>
            		<xsd:element name="dateSubmitted"
            			type="xsd:dateTime" nillable="true">
            		</xsd:element>
            		<xsd:element name="description" type="xsd:string"
            			minOccurs="0" maxOccurs="unbounded">
            		</xsd:element>
            		<xsd:element name="docType" type="xsd:string"
            			maxOccurs="unbounded" minOccurs="0">
            		</xsd:element>
            		<xsd:element name="educationLevel" type="xsd:string"
            			maxOccurs="unbounded" minOccurs="0">
            		</xsd:element>
            		<xsd:element name="extent" type="xsd:string"
            			maxOccurs="unbounded" minOccurs="0">
            		</xsd:element>
            		<xsd:element name="format" type="xsd:string"
            			maxOccurs="unbounded" minOccurs="0">
            		</xsd:element>
            		<xsd:element name="hasFormat" type="xsd:string"
            			maxOccurs="unbounded" minOccurs="0">
            		</xsd:element>
            		<xsd:element name="hasPart" type="ns0:Part"
            			maxOccurs="unbounded" minOccurs="0">
            		</xsd:element>
            		<xsd:element name="hasVersionOf" type="xsd:string"
            			maxOccurs="unbounded" minOccurs="0">
            		</xsd:element>
            		<xsd:element name="identifier" type="xsd:string"
            			maxOccurs="unbounded" minOccurs="0">
            		</xsd:element>
            		<xsd:element name="identifierDOI" type="xsd:string"
            			maxOccurs="1" minOccurs="0">
            		</xsd:element>
            		<xsd:element name="identifierISBN" type="xsd:string"
            			minOccurs="0">
            		</xsd:element>
            		<xsd:element name="identifierISSN" type="xsd:string"
            			minOccurs="0">
            		</xsd:element>
            		<xsd:element name="identifierURL" type="xsd:string"
            			maxOccurs="1" minOccurs="0">
            		</xsd:element>
            		<xsd:element name="identifierURN" type="xsd:string"
            			maxOccurs="1" minOccurs="0">
            		</xsd:element>
            		<xsd:element name="isFormatOf" type="xsd:string"
            			maxOccurs="unbounded" minOccurs="0">
            		</xsd:element>
            		<xsd:element name="isPartOf" type="ns0:Part"
            			maxOccurs="unbounded" minOccurs="0">
            		</xsd:element>
            		<xsd:element name="isReferencedBy" type="xsd:string"
            			maxOccurs="unbounded" minOccurs="0">
            		</xsd:element>
            		<xsd:element name="isReplacedBy" type="xsd:string"
            			maxOccurs="unbounded" minOccurs="0">
            		</xsd:element>
            		<xsd:element name="isRequiredBy" type="xsd:string"
            			maxOccurs="unbounded" minOccurs="0">
            		</xsd:element>
            		<xsd:element name="isVersionOf" type="ns0:Part"
            			maxOccurs="unbounded" minOccurs="0">
            		</xsd:element>
            		<xsd:element name="issued" type="xsd:dateTime"
            			nillable="true">
            		</xsd:element>
            		<xsd:element name="language" type="xsd:string"
            			minOccurs="0" maxOccurs="unbounded">
            		</xsd:element>
            		<xsd:element name="mediator" type="xsd:string"
            			maxOccurs="unbounded" minOccurs="0">
            		</xsd:element>
            		<xsd:element name="medium" type="xsd:string"
            			maxOccurs="unbounded" minOccurs="0">
            		</xsd:element>
            		<xsd:element name="modified" type="xsd:dateTime"
            			nillable="true">
            		</xsd:element>
            		<xsd:element name="pubType" type="xsd:string"
            			maxOccurs="unbounded" minOccurs="0">
            		</xsd:element>
            		<xsd:element name="publisher" type="xsd:string"
            			maxOccurs="unbounded" minOccurs="0">
            		</xsd:element>
            		<xsd:element name="references" type="xsd:string"
            			maxOccurs="unbounded" minOccurs="0">
            		</xsd:element>
            		<xsd:element name="relation" type="xsd:string"
            			maxOccurs="unbounded" minOccurs="0">
            		</xsd:element>
            		<xsd:element name="replaces" type="xsd:string"
            			maxOccurs="unbounded" minOccurs="0">
            		</xsd:element>
            		<xsd:element name="requires" type="xsd:string"
            			maxOccurs="unbounded" minOccurs="0">
            		</xsd:element>
            		<xsd:element name="rights" type="xsd:string"
            			maxOccurs="unbounded" minOccurs="0">
            		</xsd:element>
            		<xsd:element name="spatial" type="xsd:string"
            			maxOccurs="unbounded" minOccurs="0">
            		</xsd:element>
            		<xsd:element name="source" type="xsd:string"
            			minOccurs="0" maxOccurs="unbounded">
            		</xsd:element>
            		<xsd:element name="subject" type="xsd:string"
            			maxOccurs="unbounded" minOccurs="0">
            		</xsd:element>
            		<xsd:element name="subjectClassified"
            			type="ns0:SubjectClassified" maxOccurs="unbounded"
            			minOccurs="0">
            		</xsd:element>
            		<xsd:element name="tableOfContents"
            			type="ns0:Element" maxOccurs="unbounded" minOccurs="0">
            		</xsd:element>
            		<xsd:element name="temporal" type="xsd:string"
            			minOccurs="0" maxOccurs="unbounded">
            		</xsd:element>
            		<xsd:element name="title" type="ns0:Element"
            			maxOccurs="unbounded" minOccurs="0">
            		</xsd:element>
                    <xsd:element name="type" type="xsd:string" minOccurs="0" maxOccurs="unbounded"></xsd:element>
                    <xsd:element name="valid" type="xsd:dateTime"
            			nillable="true">
            		</xsd:element>
            	</xsd:sequence>
            </xsd:complexType>
    
            <xsd:complexType name="Element">
            	<xsd:sequence>
                    <xsd:element name="type" type="xsd:string" nillable="true"></xsd:element>
                    <xsd:element name="lang" type="xsd:string" nillable="true"></xsd:element>
            		<xsd:element name="value" type="xsd:string" nillable="true"></xsd:element>
            	</xsd:sequence>
            </xsd:complexType>
    
            <xsd:complexType name="Citation">
            	<xsd:sequence>
            		<xsd:element name="journalIssueDate" type="xsd:string" nillable="true"></xsd:element>
            		<xsd:element name="journalTitle" type="xsd:string" nillable="true"></xsd:element>
            		<xsd:element name="journalVolume" type="xsd:string" nillable="true"></xsd:element>
            		<xsd:element name="journalIssueNumber" type="xsd:string" nillable="true"></xsd:element>
            	</xsd:sequence>
            </xsd:complexType>
    
            <xsd:complexType name="CreatorCorporated">
            	<xsd:sequence>
            		<xsd:element name="GKDIdentNumber" type="xsd:string" nillable="true"></xsd:element>
            		<xsd:element name="PNDIdentNumber" type="xsd:string" nillable="true"></xsd:element>
            		<xsd:element name="academicTitle" type="xsd:string" nillable="true"></xsd:element>
            		<xsd:element name="emailAddress" type="xsd:string" nillable="true"></xsd:element>
            		<xsd:element name="firstName" type="xsd:string" nillable="true"></xsd:element>
            		<xsd:element name="institutionelAuthor" type="xsd:string" nillable="true"></xsd:element>
            		<xsd:element name="lastName" type="xsd:string" nillable="true"></xsd:element>
            		<xsd:element name="organization" type="xsd:string" nillable="true"></xsd:element>
            		<xsd:element name="postalAddress" type="xsd:string" nillable="true"></xsd:element>
            		<xsd:element name="role" type="xsd:string" nillable="true"></xsd:element>
            	</xsd:sequence>
            </xsd:complexType>
    
            <xsd:complexType name="CreatorPerson">
            	<xsd:sequence>
            		<xsd:element name="GKDIdentNumber" type="xsd:string" nillable="true"></xsd:element>
            		<xsd:element name="PNDIdentNumber" type="xsd:string" nillable="true"></xsd:element>
            		<xsd:element name="academicTitle" type="xsd:string" nillable="true"></xsd:element>
            		<xsd:element name="emailAddress" type="xsd:string" nillable="true"></xsd:element>
            		<xsd:element name="firstName" type="xsd:string" nillable="true"></xsd:element>
            		<xsd:element name="institutionelAuthor" type="xsd:string" nillable="true"></xsd:element>
            		<xsd:element name="lastName" type="xsd:string" nillable="true"></xsd:element>
            		<xsd:element name="organization" type="xsd:string" nillable="true"></xsd:element>
            		<xsd:element name="postalAddress" type="xsd:string" nillable="true"></xsd:element>
            		<xsd:element name="role" type="xsd:string" nillable="true"></xsd:element>
            	</xsd:sequence>
            </xsd:complexType>
    
            <xsd:complexType name="Contributor">
            	<xsd:sequence>
            		<xsd:element name="GKDIdentNumber" type="xsd:string" nillable="true"></xsd:element>
            		<xsd:element name="PNDIdentNumber" type="xsd:string" nillable="true"></xsd:element>
            		<xsd:element name="academicTitle" type="xsd:string" nillable="true"></xsd:element>
            		<xsd:element name="emailAddress" type="xsd:string" nillable="true"></xsd:element>
            		<xsd:element name="firstName" type="xsd:string" nillable="true"></xsd:element>
            		<xsd:element name="institutionelAuthor" type="xsd:string" nillable="true"></xsd:element>
            		<xsd:element name="lastName" type="xsd:string" nillable="true"></xsd:element>
            		<xsd:element name="organization" type="xsd:string" nillable="true"></xsd:element>
            		<xsd:element name="postalAddress" type="xsd:string" nillable="true"></xsd:element>
            		<xsd:element name="role" type="xsd:string" nillable="true"></xsd:element>
            	</xsd:sequence>
            </xsd:complexType>
    
            <xsd:complexType name="Part">
            	<xsd:sequence>
            		<xsd:element name="URL" type="xsd:string" nillable="true"></xsd:element>
            		<xsd:element name="URN" type="xsd:string" nillable="true"></xsd:element>
            		<xsd:element name="title" type="xsd:string" nillable="true"></xsd:element>
            	</xsd:sequence>
            </xsd:complexType>
    
            <xsd:complexType name="SubjectClassified">
            	<xsd:sequence>
            		<xsd:element name="classificationIdent" type="xsd:string" nillable="true"></xsd:element>
            		<xsd:element name="classificationSystem" type="xsd:string" nillable="true"></xsd:element>
            		<xsd:element name="subjectClassified" type="xsd:string" nillable="true"></xsd:element>
            	</xsd:sequence>
            </xsd:complexType>
            
            <xsd:complexType name="AdministrativeMetadata">
        			<xsd:sequence>
        				<xsd:element name="childList" type="xsd:string" maxOccurs="unbounded" minOccurs="0" nillable="true"></xsd:element>
        				<xsd:element name="metaName" type="xsd:string"></xsd:element>
        				<xsd:element name="chunkURL" type="xsd:string" maxOccurs="1" minOccurs="0"></xsd:element>
        				<xsd:element name="absoluteURL" type="xsd:string" maxOccurs="1" minOccurs="0"></xsd:element>
        				<xsd:element name="metaType" type="xsd:string"></xsd:element>
        				<xsd:element name="parentList" type="xsd:string" maxOccurs="unbounded" minOccurs="0" nillable="true"></xsd:element>
        			</xsd:sequence>
            </xsd:complexType>
            

            <xsd:element name="setNewJournal_fault">
            	<xsd:complexType>
            		<xsd:sequence>
            			<xsd:element name="setNewJournal_fault"
            				type="xsd:string">
            			</xsd:element>
            		</xsd:sequence>
            	</xsd:complexType>
            </xsd:element>
        	<xsd:element name="setNewComplexDocument">
        		<xsd:complexType>
        			<xsd:sequence>
        				<xsd:element name="isPartOfPID"
        					type="xsd:string">
        				</xsd:element>
        				<xsd:element name="isVersionOfPID"
        					type="xsd:string">
        				</xsd:element>
        				<xsd:element name="qdc"
        					type="ns0:QualifiedDublinCore">
        				</xsd:element>
        			</xsd:sequence>
        		</xsd:complexType>
        	</xsd:element>
        	<xsd:element name="setNewComplexDocumentResponse">
        		<xsd:complexType>
        			<xsd:sequence>
        				<xsd:element name="createNewComplexDocumentReturn" type="xsd:string"></xsd:element>
        			</xsd:sequence>
        		</xsd:complexType>
        	</xsd:element>
        	<xsd:element name="setNewContainer_fault">
        		<xsd:complexType>
        			<xsd:sequence>
        				<xsd:element name="setNewContainer_fault"
        					type="xsd:string">
        				</xsd:element>
        			</xsd:sequence>
        		</xsd:complexType>
        	</xsd:element>
        	<xsd:element name="setNewArticle_fault">
        		<xsd:complexType>
        			<xsd:sequence>
        				<xsd:element name="setNewArticle_fault"
        					type="xsd:string">
        				</xsd:element>
        			</xsd:sequence>
        		</xsd:complexType>
        	</xsd:element>
        	<xsd:element name="setConvert_fault">
        		<xsd:complexType>
        			<xsd:sequence>
        				<xsd:element name="setConvert_fault"
        					type="xsd:string">
        				</xsd:element>
        			</xsd:sequence>
        		</xsd:complexType>
        	</xsd:element>
        	<xsd:element name="copyObject">
        		<xsd:complexType>
        			<xsd:sequence>
        				<xsd:element name="objectPID"
        					type="xsd:string">
        				</xsd:element>
        				<xsd:element name="destObjectPID"
        					type="xsd:string">
        				</xsd:element>
        			</xsd:sequence>
        		</xsd:complexType>
        	</xsd:element>
        	<xsd:element name="copyObjectResponse">
        		<xsd:complexType>
        			<xsd:sequence>
        				<xsd:element name="copyObjectReturn" type="xsd:string"></xsd:element>
        			</xsd:sequence>
        		</xsd:complexType>
        	</xsd:element>
        	<xsd:element name="moveObject">
        		<xsd:complexType>
        			<xsd:sequence>
        				<xsd:element name="objectPID"
        					type="xsd:string">
        				</xsd:element>
        				<xsd:element name="sourceObjectPID"
        					type="xsd:string">
        				</xsd:element>
        				<xsd:element name="destObjectPID"
        					type="xsd:string">
        				</xsd:element>
        			</xsd:sequence>
        		</xsd:complexType>
        	</xsd:element>
        	<xsd:element name="moveObjectResponse">
        		<xsd:complexType>
        			<xsd:sequence>
        				<xsd:element name="moveObjectReturn" type="xsd:string"></xsd:element>
        			</xsd:sequence>
        		</xsd:complexType>
        	</xsd:element>
        	<xsd:element name="setPublishingState">
        		<xsd:complexType>
        			<xsd:sequence>
        				<xsd:element name="articlePID"
        					type="xsd:string">
        				</xsd:element>
        				<xsd:element name="state" type="xsd:boolean">
        				</xsd:element>
        				<xsd:element name="published"
        					type="xsd:boolean">
        				</xsd:element>
        			</xsd:sequence>
        		</xsd:complexType>
        	</xsd:element>
        	<xsd:element name="setPublishingStateResponse">
        		<xsd:complexType>
        			<xsd:sequence>
        				<xsd:element name="setPublishingStateReturn" type="xsd:string"></xsd:element>
        			</xsd:sequence>
        		</xsd:complexType>
        	</xsd:element>
        	<xsd:element name="setPublishingState_fault">
        		<xsd:complexType>
        			<xsd:sequence>
        				<xsd:element name="setPublishingState_fault"
        					type="xsd:string">
        				</xsd:element>
        			</xsd:sequence>
        		</xsd:complexType>
        	</xsd:element>
        	<xsd:element name="setNewDirectory">
        		<xsd:complexType>
        			<xsd:sequence>
        				<xsd:element name="admProperties"
        					type="ns0:AdministrativeMetadata">
        				</xsd:element>
        			</xsd:sequence>
        		</xsd:complexType>
        	</xsd:element>
        	<xsd:element name="setNewDirectoryResponse">
        		<xsd:complexType>
        			<xsd:sequence>
        				<xsd:element name="setNewDirectoryReturn" type="xsd:string"></xsd:element>
        			</xsd:sequence>
        		</xsd:complexType>
        	</xsd:element>
    	
        	<xsd:element name="setAdministrativeMetadata">
        		<xsd:complexType>
        			<xsd:sequence>
        				<xsd:element name="admProperties" type="ns0:AdministrativeMetadata"></xsd:element>
        			</xsd:sequence>
        		</xsd:complexType>
        	</xsd:element>
        	<xsd:element name="setAdministrativeMetadataResponse">
        		<xsd:complexType>
        			<xsd:sequence>
        				<xsd:element name="setAdministrativeMetadatareturn" type="xsd:string"></xsd:element>
        			</xsd:sequence>
        		</xsd:complexType>
        	</xsd:element>
        	<xsd:element name="getAdministrativeMetadata">
        		<xsd:complexType>
        			<xsd:sequence>
        				<xsd:element name="in0" type="xsd:string"></xsd:element>
        			</xsd:sequence>
        		</xsd:complexType>
        	</xsd:element>
        	<xsd:element name="getAdministrativeMetadataResponse">
        		<xsd:complexType>
        			<xsd:sequence>
        				<xsd:element name="getAdministrativeMetadataReturn" type="ns0:AdministrativeMetadata"></xsd:element>
        			</xsd:sequence>
        		</xsd:complexType>
        	</xsd:element>
        	<xsd:element name="getAdministrativeMetadata_fault">
        		<xsd:complexType>
        			<xsd:sequence>
        				<xsd:element
        					name="getAdministrativeMetadata_fault" type="xsd:string">
        				</xsd:element>
        			</xsd:sequence>
        		</xsd:complexType>
        	</xsd:element>
        	<xsd:element name="setAdministrativeMetadata_fault">
        		<xsd:complexType>
        			<xsd:sequence>
        				<xsd:element
        					name="setAdministrativeMetadata_fault" type="xsd:string">
        				</xsd:element>
        			</xsd:sequence>
        		</xsd:complexType>
        	</xsd:element>
        	
        	      <xsd:element name="findObjects">
        <xsd:complexType>
          <xsd:sequence>
          	<xsd:element name="resultFieldArray"
          		type="ns0:resultFieldArrayType">
          	</xsd:element>
          	<xsd:element name="maxResult"
          		type="xsd:nonNegativeInteger">
          		<xsd:annotation>
          			<xsd:documentation>
          				Defines how many Objects should be returned
          				within the result. Fedora expects here the
          				Datatype nonNegativeInteger in its API-A.
          				Because we need an int for calling the API-A
          				Operation from DiPPCore, this has to be casted
          				within DiPPCore.
          			</xsd:documentation>
          		</xsd:annotation>
          	</xsd:element>
          	<xsd:element name="searchConditionList"
          		type="ns0:searchConditionListType">
          	</xsd:element>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="findObjectsResponse">
        <xsd:complexType>
          <xsd:sequence>
          	<xsd:element name="FieldSearchResult"
          		type="ns0:FieldSearchResult" minOccurs="1" maxOccurs="1" />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
    
      <xsd:complexType name="resultFieldArrayType">
      	<xsd:sequence>
      		<xsd:element name="field" type="xsd:string" maxOccurs="unbounded" minOccurs="1"></xsd:element>
      	</xsd:sequence>
      </xsd:complexType>
    
        
      <xsd:complexType name="searchConditionListType">
      	<xsd:sequence>
      		<xsd:element name="conditions"
      			type="ns0:conditionType" maxOccurs="unbounded" minOccurs="0">
      		</xsd:element>
      	</xsd:sequence>
      </xsd:complexType>
    
        
      <xsd:complexType name="conditionType">
      	<xsd:sequence>
      		<xsd:element name="property" type="xsd:string" maxOccurs="1" minOccurs="1">
      			<xsd:annotation>
      				<xsd:documentation>
      					Defines which field from the Fedora Repository
      					Database should be searched. Maybe this can be
      					better an option list, but I'm unsure if ZSI
      					supports this.
      				</xsd:documentation>
      			</xsd:annotation></xsd:element>
      		<xsd:element name="operator" type="ns0:operatorType"
      			maxOccurs="1" minOccurs="1">
      		</xsd:element>
      		<xsd:element name="value" type="xsd:string" maxOccurs="1" minOccurs="1"></xsd:element>
      	</xsd:sequence>
      </xsd:complexType>

    
      <xsd:simpleType name="operatorType">
      	<xsd:restriction base="xsd:string">
      		<xsd:enumeration value="has"></xsd:enumeration>
      		<xsd:enumeration value="eq"></xsd:enumeration>
      		<xsd:enumeration value="lt"></xsd:enumeration>
      		<xsd:enumeration value="le"></xsd:enumeration>
      		<xsd:enumeration value="gt"></xsd:enumeration>
      		<xsd:enumeration value="ge"></xsd:enumeration>
      	</xsd:restriction>
      </xsd:simpleType>
    
      <xsd:complexType name="FieldSearchResult">
      	<xsd:sequence>
      		<xsd:element name="ListSession" type="ns0:ListSessionType"
      			maxOccurs="1" minOccurs="0">
      		</xsd:element>
      		<xsd:element name="ObjectFields" type="ns0:ObjectFields"
      			maxOccurs="unbounded" minOccurs="0">
      		</xsd:element>
      	</xsd:sequence>
      </xsd:complexType>
    
      <xsd:complexType name="ListSessionType">
      	<xsd:sequence>
      		<xsd:element name="token" type="xsd:string" maxOccurs="1"
      			minOccurs="1">
      		</xsd:element>
      		<xsd:element name="cursor" type="xsd:int" maxOccurs="1"
      			minOccurs="1">
      		</xsd:element>
      		<xsd:element name="completeListSize" type="xsd:int"
      			maxOccurs="1" minOccurs="1">
      		</xsd:element>
      		<xsd:element name="expirationDate" type="xsd:string" maxOccurs="1" minOccurs="1"></xsd:element>
      	</xsd:sequence>
      </xsd:complexType>
    
      <xsd:complexType name="ObjectFields">
      	<xsd:sequence>
      		<xsd:element name="pid" type="xsd:string" maxOccurs="1"
      			minOccurs="0">
      		</xsd:element>
      		<xsd:element name="label" type="xsd:string" maxOccurs="1"
      			minOccurs="0">
      		</xsd:element>
      		<xsd:element name="state" type="xsd:string" maxOccurs="1"
      			minOccurs="0">
      		</xsd:element>
      		<xsd:element name="cDate" type="xsd:string" maxOccurs="1"
      			minOccurs="0">
      		</xsd:element>
      		<xsd:element name="mDate" type="xsd:string" maxOccurs="1"
      			minOccurs="0">
      		</xsd:element>
      		<xsd:element name="dcmDate" type="xsd:string"
      			maxOccurs="1" minOccurs="0">
      		</xsd:element>
      		<xsd:element name="title" type="xsd:string"
      			maxOccurs="unbounded" minOccurs="0">
      		</xsd:element>
      		<xsd:element name="creator" type="xsd:string"
      			maxOccurs="unbounded" minOccurs="0">
      		</xsd:element>
      		<xsd:element name="subject" type="xsd:string"
      			maxOccurs="unbounded" minOccurs="0">
      		</xsd:element>
      		<xsd:element name="description" type="xsd:string"
      			maxOccurs="unbounded" minOccurs="0">
      		</xsd:element>
      		<xsd:element name="publisher" type="xsd:string"
      			maxOccurs="unbounded" minOccurs="0">
      		</xsd:element>
      		<xsd:element name="contributor" type="xsd:string"
      			maxOccurs="unbounded" minOccurs="0">
      		</xsd:element>
      		<xsd:element name="date" type="xsd:string"
      			maxOccurs="unbounded" minOccurs="0">
      		</xsd:element>
      		<xsd:element name="type" type="xsd:string"
      			maxOccurs="unbounded" minOccurs="0">
      		</xsd:element>
      		<xsd:element name="format" type="xsd:string"
      			maxOccurs="unbounded" minOccurs="0">
      		</xsd:element>
      		<xsd:element name="identifier" type="xsd:string"
      			maxOccurs="unbounded" minOccurs="0">
      		</xsd:element>
      		<xsd:element name="source" type="xsd:string"
      			maxOccurs="unbounded" minOccurs="0">
      		</xsd:element>
      		<xsd:element name="language" type="xsd:string"
      			maxOccurs="unbounded" minOccurs="0">
      		</xsd:element>
      		<xsd:element name="relation" type="xsd:string"
      			maxOccurs="unbounded" minOccurs="0">
      		</xsd:element>
      		<xsd:element name="coverage" type="xsd:string"
      			maxOccurs="unbounded" minOccurs="0">
      		</xsd:element>
      		<xsd:element name="rights" type="xsd:string" maxOccurs="unbounded" minOccurs="0"></xsd:element>
      	</xsd:sequence>
      </xsd:complexType>
        	
        </xsd:schema>
    </wsdl:types>
  <wsdl:message name="getArticleContentMetadataRequest">
    <wsdl:part element="ns0:getArticleContentMetadata"
    	name="parameters" />
  </wsdl:message>
  <wsdl:message name="getArticleContentMetadataResponse">
    <wsdl:part element="ns0:getArticleContentMetadataResponse" name="parameters"/>
  </wsdl:message>
  <wsdl:message name="getQualifiedDublinCoreRequest">
  	<wsdl:part name="parameters" element="ns0:getQualifiedDublinCore"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getQualifiedDublinCoreResponse">
  	<wsdl:part name="parameters" element="ns0:getQualifiedDublinCoreResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="setQualifiedDublinCoreRequest">
  	<wsdl:part name="parameters" element="ns0:setQualifiedDublinCore"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="setQualifiedDublinCoreResponse">
  	<!-- <wsdl:part name="parameters" element="tns:setQualifiedDublinCoreResponse"></wsdl:part> -->
  </wsdl:message>
  <wsdl:message name="setNewJournalRequest">
  	<wsdl:part name="parameters" element="ns0:setNewJournal"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="setNewJournalResponse">
  	<wsdl:part name="parameters" element="ns0:setNewJournalResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="setNewArticleRequest">
  	<wsdl:part name="parameters" element="ns0:setNewArticle"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="setNewArticleResponse">
  	<wsdl:part name="parameters" element="ns0:setNewArticleResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="setConvertRequest">
  	<wsdl:part name="parameters" element="ns0:setConvert"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="setConvertResponse">
  	<wsdl:part name="parameters" element="ns0:setConvertResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="setNewContainerRequest">
  	<wsdl:part name="parameters" element="ns0:setNewContainer"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="setNewContainerResponse">
  	<wsdl:part name="parameters" element="ns0:setNewContainerResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="setNewJournal_faultMsg">
  	<wsdl:part name="parameters" element="ns0:setNewJournal_fault"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="setNewComplexDocumentRequest">
  	<wsdl:part name="parameters" element="ns0:setNewComplexDocument"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="setNewComplexDocumentResponse">
  	<wsdl:part name="parameters" element="ns0:setNewComplexDocumentResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="setNewContainer_faultMsg">
  	<wsdl:part name="parameters" element="ns0:setNewContainer_fault"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="setNewArticle_faultMsg">
  	<wsdl:part name="parameters" element="ns0:setNewArticle_fault"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="setConvert_faultMsg">
  	<wsdl:part name="parameters" element="ns0:setConvert_fault"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="copyObjectRequest">
  	<wsdl:part name="parameters" element="ns0:copyObject"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="copyObjectResponse">
  	<wsdl:part name="parameters" element="ns0:copyObjectResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="moveObjectRequest">
  	<wsdl:part name="parameters" element="ns0:moveObject"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="moveObjectResponse">
  	<wsdl:part name="parameters" element="ns0:moveObjectResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="setPublishingStateRequest">
  	<wsdl:part name="parameters" element="ns0:setPublishingState"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="setPublishingStateResponse">
  	<wsdl:part name="parameters" element="ns0:setPublishingStateResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="setNewDirectoryRequest">
  	<wsdl:part name="parameters" element="ns0:setNewDirectory"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="setNewDirectoryResponse">
  	<wsdl:part name="parameters" element="ns0:setNewDirectoryResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="setAdministrativeMetadataRequest">
  	<wsdl:part name="parameters" element="ns0:setAdministrativeMetadata"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="setAdministrativeMetadataResponse">
  	<!-- <wsdl:part name="parameters" element="ns0:setAdministrativeMetadataResponse"></wsdl:part> -->
  </wsdl:message>
  <wsdl:message name="getAdministrativeMetadataRequest">
  	<wsdl:part name="parameters" element="ns0:getAdministrativeMetadata"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getAdministrativeMetadataResponse">
  	<wsdl:part name="parameters" element="ns0:getAdministrativeMetadataResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getAdministrativeMetadata_faultMsg">
  	<wsdl:part name="parameters" element="ns0:getAdministrativeMetadata_fault"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="setAdministrativeMetadata_faultMsg">
  	<wsdl:part name="fault" element="ns0:setAdministrativeMetadata_fault"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="findObjectsRequest">
    <wsdl:part element="ns0:findObjects" name="parameters" />
  </wsdl:message>
  <wsdl:message name="findObjectsResponse">
    <wsdl:part element="ns0:findObjectsResponse" name="parameters"/>
  </wsdl:message>
  
  <wsdl:portType name="ContentModel">
    <wsdl:operation name="getArticleContentMetadata">
      <wsdl:input message="tns:getArticleContentMetadataRequest"/>
      <wsdl:output message="tns:getArticleContentMetadataResponse"/>
    </wsdl:operation>
    <wsdl:operation name="getQualifiedDublinCore">
    	<wsdl:input message="tns:getQualifiedDublinCoreRequest"></wsdl:input>
    	<wsdl:output message="tns:getQualifiedDublinCoreResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="setQualifiedDublinCore">
    	<wsdl:input message="tns:setQualifiedDublinCoreRequest"></wsdl:input>
    	<wsdl:output message="tns:setQualifiedDublinCoreResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="setNewJournal">
    	<wsdl:input message="tns:setNewJournalRequest"></wsdl:input>
    	<wsdl:output message="tns:setNewJournalResponse"></wsdl:output>
            <wsdl:fault name="fault" message="tns:setNewJournal_faultMsg"></wsdl:fault>
        </wsdl:operation>
    <wsdl:operation name="setNewArticle">
    	<wsdl:input message="tns:setNewArticleRequest"></wsdl:input>
    	<wsdl:output message="tns:setNewArticleResponse"></wsdl:output>
            <wsdl:fault name="fault" message="tns:setNewArticle_faultMsg"></wsdl:fault>
        </wsdl:operation>
    <wsdl:operation name="setConvert">
    	<wsdl:input message="tns:setConvertRequest"></wsdl:input>
    	<wsdl:output message="tns:setConvertResponse"></wsdl:output>
            <wsdl:fault name="fault" message="tns:setConvert_faultMsg"></wsdl:fault>
        </wsdl:operation>
    <wsdl:operation name="setNewContainer">
    	<wsdl:input message="tns:setNewContainerRequest"></wsdl:input>
    	<wsdl:output message="tns:setNewContainerResponse"></wsdl:output>
            <wsdl:fault name="fault" message="tns:setNewContainer_faultMsg"></wsdl:fault>
        </wsdl:operation>
    <wsdl:operation name="setNewComplexDocument">
    	<wsdl:input message="tns:setNewComplexDocumentRequest"></wsdl:input>
    	<wsdl:output message="tns:setNewComplexDocumentResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="copyObject">
    	<wsdl:input message="tns:copyObjectRequest"></wsdl:input>
    	<wsdl:output message="tns:copyObjectResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="moveObject">
    	<wsdl:input message="tns:moveObjectRequest"></wsdl:input>
    	<wsdl:output message="tns:moveObjectResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="setPublishingState">
    	<wsdl:input message="tns:setPublishingStateRequest"></wsdl:input>
    	<wsdl:output message="tns:setPublishingStateResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="setNewDirectory">
    	<wsdl:input message="tns:setNewDirectoryRequest"></wsdl:input>
    	<wsdl:output message="tns:setNewDirectoryResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="setAdministrativeMetadata">
    	<wsdl:input message="tns:setAdministrativeMetadataRequest"></wsdl:input>
    	<wsdl:output message="tns:setAdministrativeMetadataResponse"></wsdl:output>
            <wsdl:fault name="fault" message="tns:setAdministrativeMetadata_faultMsg"></wsdl:fault>
        </wsdl:operation>
    <wsdl:operation name="getAdministrativeMetadata">
    	<wsdl:input message="tns:getAdministrativeMetadataRequest"></wsdl:input>
    	<wsdl:output message="tns:getAdministrativeMetadataResponse"></wsdl:output>
            <wsdl:fault name="fault" message="tns:getAdministrativeMetadata_faultMsg"></wsdl:fault>
	</wsdl:operation>
    <wsdl:operation name="findObjects">
      <wsdl:input message="tns:findObjectsRequest"/>
      <wsdl:output message="tns:findObjectsResponse"/>
    </wsdl:operation>

  </wsdl:portType>
  <wsdl:binding name="dippSoapBinding" type="tns:ContentModel">
  	<soap:binding style="document"
  		transport="http://schemas.xmlsoap.org/soap/http" />
  	<wsdl:operation name="getArticleContentMetadata">
  		<soap:operation
  			soapAction="http://www.dippCore.dipp.nrw.de/definitions/getArticleContentMetadata" />
  		<wsdl:input>
  			<soap:body use="literal" />
  		</wsdl:input>
  		<wsdl:output>
  			<soap:body use="literal" />
  		</wsdl:output>
  	</wsdl:operation>
  	<wsdl:operation name="getQualifiedDublinCore">
  		<soap:operation
  			soapAction="http://www.dippCore.dipp.nrw.de/definitions/getQualifiedDublinCore" />
  		<wsdl:input>
  			<soap:body use="literal" />
  		</wsdl:input>
  		<wsdl:output>
  			<soap:body use="literal" />
  		</wsdl:output>
  	</wsdl:operation>
  	<wsdl:operation name="setQualifiedDublinCore">
  		<soap:operation
  			soapAction="http://www.dippCore.dipp.nrw.de/definitions/setQualifiedDublinCore" />
  		<wsdl:input>
  			<soap:body use="literal" />
  		</wsdl:input>
  	</wsdl:operation>
  	<wsdl:operation name="setNewJournal">
  		<soap:operation
  			soapAction="http://www.dippCore.dipp.nrw.de/definitions/setNewJournal" />
  		<wsdl:input>
  			<soap:body use="literal" />
  		</wsdl:input>
  		<wsdl:output>
  			<soap:body use="literal" />
  		</wsdl:output>
  		<wsdl:fault name="fault">
  			<soap:fault use="literal" name="fault" />
  		</wsdl:fault>
  	</wsdl:operation>
  	<wsdl:operation name="setNewArticle">
  		<soap:operation
  			soapAction="http://www.dippCore.dipp.nrw.de/definitions/setNewArticle" />
  		<wsdl:input>
  			<soap:body use="literal" />
  		</wsdl:input>
  		<wsdl:output>
  			<soap:body use="literal" />
  		</wsdl:output>
  		<wsdl:fault name="fault">
  			<soap:fault use="literal" name="fault" />
  		</wsdl:fault>
  	</wsdl:operation>
  	<wsdl:operation name="setConvert">
  		<soap:operation
  			soapAction="http://www.dippCore.dipp.nrw.de/definitions/setConvert" />
  		<wsdl:input>
  			<soap:body use="literal" />
  		</wsdl:input>
  		<wsdl:output>
  			<soap:body use="literal" />
  		</wsdl:output>
  		<wsdl:fault name="fault">
  			<soap:fault use="literal" name="fault" />
  		</wsdl:fault>
  	</wsdl:operation>
  	<wsdl:operation name="setNewContainer">
  		<soap:operation
  			soapAction="http://www.dippCore.dipp.nrw.de/definitions/setNewContainer" />
  		<wsdl:input>
  			<soap:body use="literal" />
  		</wsdl:input>
  		<wsdl:output>
  			<soap:body use="literal" />
  		</wsdl:output>
  		<wsdl:fault name="fault">
  			<soap:fault use="literal" name="fault" />
  		</wsdl:fault>
  	</wsdl:operation>
  	<wsdl:operation name="setNewComplexDocument">
  		<soap:operation
  			soapAction="http://www.dippCore.dipp.nrw.de/definitions/setNewComplexDocument" />
  		<wsdl:input>
  			<soap:body use="literal" />
  		</wsdl:input>
  		<wsdl:output>
  			<soap:body use="literal" />
  		</wsdl:output>
  	</wsdl:operation>
  	<wsdl:operation name="copyObject">
  		<soap:operation
  			soapAction="http://www.dippCore.dipp.nrw.de/definitions/copyObject" />
  		<wsdl:input>
  			<soap:body use="literal" />
  		</wsdl:input>
  		<wsdl:output>
  			<soap:body use="literal" />
  		</wsdl:output>
  	</wsdl:operation>
  	<wsdl:operation name="moveObject">
  		<soap:operation
  			soapAction="http://www.dippCore.dipp.nrw.de/definitions/moveObject" />
  		<wsdl:input>
  			<soap:body use="literal" />
  		</wsdl:input>
  		<wsdl:output>
  			<soap:body use="literal" />
  		</wsdl:output>
  	</wsdl:operation>
  	<wsdl:operation name="setPublishingState">
  		<soap:operation
  			soapAction="http://www.dippCore.dipp.nrw.de/definitions/setPublishingState" />
  		<wsdl:input>
  			<soap:body use="literal" />
  		</wsdl:input>
  		<wsdl:output>
  			<soap:body use="literal" />
  		</wsdl:output>
  	</wsdl:operation>
  	<wsdl:operation name="setNewDirectory">
  		<soap:operation
  			soapAction="http://www.dippCore.dipp.nrw.de/definitions/setNewDirectory" />
  		<wsdl:input>
  			<soap:body use="literal" />
  		</wsdl:input>
  		<wsdl:output>
  			<soap:body use="literal" />
  		</wsdl:output>
  	</wsdl:operation>
  	<wsdl:operation name="setAdministrativeMetadata">
  		<soap:operation
  			soapAction="http://www.dippCore.dipp.nrw.de/definitions/setAdministrativeMetadata" />
  		<wsdl:input>
  			<soap:body use="literal" />
  		</wsdl:input>
  		<wsdl:fault name="fault">
  			<soap:fault use="literal" name="fault" />
  		</wsdl:fault>
  	</wsdl:operation>
  	<wsdl:operation name="getAdministrativeMetadata">
  		<soap:operation
  			soapAction="http://www.dippCore.dipp.nrw.de/definitions/getAdministrativeMetadata" />
  		<wsdl:input>
  			<soap:body use="literal" />
  		</wsdl:input>
  		<wsdl:output>
  			<soap:body use="literal" />
  		</wsdl:output>
  		<wsdl:fault name="fault">
  			<soap:fault use="literal" name="fault" />
  		</wsdl:fault>
  	</wsdl:operation>
  	<wsdl:operation name="findObjects">
  		<soap:operation
  			soapAction="http://www.dippCore.dipp.nrw.de/definitions/findObjects" />
  		<wsdl:input>
  			<soap:body use="literal" />
  		</wsdl:input>
  		<wsdl:output>
  			<soap:body use="literal" />
  		</wsdl:output>
  	</wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="ContentModelService">
    <wsdl:port binding="tns:dippSoapBinding" name="dipp">
      <soap:address location="http://127.0.0.1:9180/dipp3/services/dipp"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>
