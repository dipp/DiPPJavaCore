<?xml version="1.0" encoding="UTF-8"?>
<xs:schema targetNamespace="http://purl.org/dc/terms/" elementFormDefault="qualified" attributeFormDefault="unqualified" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:dcmitype="http://purl.org/dc/dcmitype/" xmlns="http://purl.org/dc/terms/" >
	<xs:annotation>
		<xs:documentation xml:lang="en">
      DCterms XML Schema
      XML Schema for http://purl.org/dc/terms/ namespace

      Created 2003-04-02

      Created by 

      Tim Cole (t-cole3@uiuc.edu)
      Tom Habing (thabing@uiuc.edu)
      Jane Hunter (jane@dstc.edu.au)
      Pete Johnston (p.johnston@ukoln.ac.uk),
      Carl Lagoze (lagoze@cs.cornell.edu)

      This schema declares XML elements for the DC elements and
      DC element refinements from the http://purl.org/dc/terms/ namespace.
      
      It reuses the complexType dc:SimpleLiteral, imported from the dc.xsd
      schema, which permits simple element content, and makes the ns1:lang
      attribute available.

      This complexType permits the derivation of other complexTypes
      which would permit child elements.

      DC elements are declared as substitutable for the abstract element dc:any, and 
      DC element refinements are defined as substitutable for the base elements 
      which they refine.

      This means that the default type for all XML elements (i.e. all DC elements and 
      element refinements) is dc:SimpleLiteral.

      Encoding schemes are defined as complexTypes which are restrictions
      of the dc:SimpleLiteral complexType. These complexTypes restrict 
      values to an appropriates syntax or format using data typing,
      regular expressions, or enumerated lists.
  
      In order to specify one of these encodings an xsi:type attribute must 
      be used in the instance document.

      Also, note that one shortcoming of this approach is that any type can be 
      applied to any of the elements or refinements.  There is no convenient way
      to restrict types to specific elements using this approach.

    </xs:documentation>
	</xs:annotation>
	<xs:import namespace="http://www.w3.org/XML/1998/namespace" schemaLocation="http://www.w3.org/2001/03/xml.xsd"/>
	<xs:import namespace="http://purl.org/dc/elements/1.1/" schemaLocation="dc.xsd"/>
	<xs:import namespace="http://purl.org/dc/dcmitype/" schemaLocation="dcmitype.xsd"/>
	<xs:element name="alternative" substitutionGroup="dc:any"/>
	<xs:element name="tableOfContents" substitutionGroup="dc:any"/>
	<xs:element name="abstract" substitutionGroup="dc:any"/>
	<xs:element name="created" substitutionGroup="dc:any"/>
	<xs:element name="valid" substitutionGroup="dc:any"/>
	<xs:element name="available" substitutionGroup="dc:any"/>
	<xs:element name="issued" substitutionGroup="dc:any"/>
	<xs:element name="modified" substitutionGroup="dc:any"/>
	<xs:element name="dateAccepted" substitutionGroup="dc:any"/>
	<xs:element name="dateCopyrighted" substitutionGroup="dc:any"/>
	<xs:element name="dateSubmitted" substitutionGroup="dc:any"/>
	<xs:element name="extent" substitutionGroup="dc:any"/>
	<xs:element name="medium" substitutionGroup="dc:any"/>
	<xs:element name="isVersionOf" type="partType"/>
	<xs:element name="hasVersion" substitutionGroup="dc:any"/>
	<xs:element name="isReplacedBy" substitutionGroup="dc:any"/>
	<xs:element name="replaces" substitutionGroup="dc:any"/>
	<xs:element name="isRequiredBy" substitutionGroup="dc:any"/>
	<xs:element name="requires" substitutionGroup="dc:any"/>
	<xs:element name="isPartOf" type="partType"/>
	<xs:element name="hasPart" type="partType"/>
	<xs:element name="isReferencedBy" substitutionGroup="dc:any"/>
	<xs:element name="references" substitutionGroup="dc:any"/>
	<xs:element name="isFormatOf" substitutionGroup="dc:any"/>
	<xs:element name="hasFormat" substitutionGroup="dc:any"/>
	<xs:element name="conformsTo" substitutionGroup="dc:any"/>
	<xs:element name="spatial" substitutionGroup="dc:any"/>
	<xs:element name="temporal" substitutionGroup="dc:any"/>
	<xs:element name="audience" substitutionGroup="dc:any"/>
	<xs:element name="mediator" substitutionGroup="dc:any"/>
	<xs:element name="educationLevel" substitutionGroup="dc:any"/>
	<xs:element name="accessRights" substitutionGroup="dc:any"/>
	<xs:element name="bibliographicCitation" type="citation"/>

	<xs:complexType name="citation">
				<xs:sequence maxOccurs="1">
					<xs:element name="journalTitle" type="xs:string"/>
					<xs:element name="journalVolume" type="xs:string"/>
					<xs:element name="journalIssueNumber" type="xs:string"/>
					<xs:element name="journalIssueDate" type="xs:string"/>
				</xs:sequence>
	</xs:complexType>

   <xs:complexType name="partType">
			<xs:sequence>
				<xs:element ref="dc:title"/>
				<xs:element ref="dc:identifier" minOccurs="2" maxOccurs="2"/>
			</xs:sequence>
   </xs:complexType>
</xs:schema>
